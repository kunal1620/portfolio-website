{"version":3,"sources":["components/reusable/Container.jsx","constants/Colors.js","components/PersonalInfo.jsx","components/SideBar.jsx","components/NavBar.jsx","components/reusable/PageContainer.jsx","pages/HomePage.jsx","components/WorkSection.jsx","pages/WorkExperience.jsx","pages/Portfolio.jsx","components/CustomToast.jsx","App.js","serviceWorker.js","index.js"],"names":["styled","div","props","height","PersonalInfoContainer","Container","LinkContainer","a","Colors","PersonalInfo","useToasts","addToast","href","target","size","SideBarContainer","SideBar","NavBarContainer","ButtonContainer","ResumeButton","PageLink","NavLink","NavBar","to","exact","flexDirection","flexWrap","padding","justifyContent","alignItems","overflow","Greeting","span","Introduction","p","HomePage","PageContainer","SectionContainer","CompanyName","JobDetails","JobDescription","WorkSection","companyName","jobTitle","duration","jobDescription","WorkExperienceContainer","WorkExperience","resorterDescription","Portfloio","ToastBody","CustomToast","appearance","children","MainContainer","PageSection","App","components","Toast","autoDismiss","autoDismissTimeout","placement","path","component","Portfolio","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0303a858.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport default styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: \"row\";\n  justify-content: center;\n  align-items: center;\n  height: ${(props) => props.height || \"\"};\n`;\n","export default {\n  primaryDark: \"#37474F\",\n  primaryLight: \"#EFEFEF\",\n  secondaryLight: \"#B8C2C7\",\n  highlight: \"#60C8AC\"\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useToasts } from \"react-toast-notifications\";\n\nimport Container from \"./reusable/Container\";\nimport Colors from \"../constants/Colors\";\nimport { MdMailOutline } from \"react-icons/md\";\nimport { FaLinkedin, FaGithub } from \"react-icons/fa\";\n\nconst PersonalInfo = (props) => {\n  const { addToast } = useToasts();\n  const iconSize = \"28px\";\n\n  /*** NOT USED\n  \n  const handleCopyToClipboard = (event) => {\n    const element = event.target;\n    const range = document.createRange();\n\n    range.selectNode(element);\n    window.getSelection().addRange(range);\n    let message;\n\n    try {\n      const result = document.execCommand(\"copy\");\n      window.getSelection().removeRange(range);\n      message = result ? \"Copied to clipboard\" : \"Couldn't copy to clipboard\";\n    } catch (err) {\n      message = \"Error occured while copying the phone number to clipboard\";\n      console.log(err);\n    }\n\n    addToast(message, {});\n  };\n\n  ***/\n\n  return (\n    <PersonalInfoContainer>\n      <LinkContainer href={\"mailto:kunal1620@gmail.com\"} target={\"_blank\"}>\n        <MdMailOutline size={iconSize} />\n        <span>Email</span>\n      </LinkContainer>\n\n      <LinkContainer\n        href={\"https://linkedin.com/in/kunal-pawar\"}\n        target={\"_blank\"}\n      >\n        <FaLinkedin size={iconSize} />\n        <span>Linkedin</span>\n      </LinkContainer>\n\n      <LinkContainer href={\"https://github.com/kunal1620\"} target={\"_blank\"}>\n        <FaGithub size={iconSize} />\n        <span>Github</span>\n      </LinkContainer>\n    </PersonalInfoContainer>\n  );\n};\n\nconst PersonalInfoContainer = styled(Container)`\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst LinkContainer = styled.a`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  font-family: Poppins;\n  text-decoration: none;\n  outline: none;\n  color: ${Colors.highlight};\n\n  span {\n    font-size: 14px;\n    font-weight: 500;\n    margin: 5px auto;\n    visibility: hidden;\n    opacity: 0;\n    transition: opacity 500ms;\n  }\n\n  &:hover span {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n\nexport default PersonalInfo;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PersonalInfo from \"./PersonalInfo\";\nimport Container from \"./reusable/Container\";\n\nimport Colors from \"../constants/Colors\";\n\nconst SideBar = (props) => (\n  <SideBarContainer>\n    <PersonalInfo />\n  </SideBarContainer>\n);\n\nconst SideBarContainer = styled(Container)`\n  display: flex;\n  max-width: 100px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${Colors.primaryDark};\n  color: ${Colors.highlight};\n`;\n\nexport default SideBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Colors from \"../constants/Colors\";\n\nconst NavBar = (props) => {\n  return (\n    <NavBarContainer>\n      <PageLink to=\"/portfolio-website\" exact={true}>\n        ABOUT ME\n      </PageLink>\n      <PageLink to=\"/portfolio\">PORTFOLIO</PageLink>\n      <PageLink to=\"/work-experience\">WORK EXPERIENCE</PageLink>\n      <ButtonContainer>\n        <ResumeButton href={\"\"} target={\"_blank\"}>\n          RESUME\n        </ResumeButton>\n      </ButtonContainer>\n    </NavBarContainer>\n  );\n};\n\nconst NavBarContainer = styled.div`\n  position: sticky;\n  top: 0;\n  padding: 10px 20px;\n  display: flex;\n  flex: 1\n  justify-content: flex-start;\n  align-items: center;\n  background-color: ${Colors.primaryLight};\n  font-family: Poppins;\n  font-size: 1em;\n  font-weight: 500;\n`;\n\n// Resume download button container on the Navbar\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: flex-end;\n  padding-right: 80px;\n`;\n\nconst ResumeButton = styled.a`\n  text-align: center;\n  text-decoration: none;\n  padding: 10px 40px;\n  border-radius: 4px;\n  background-color: ${Colors.primaryDark};\n  color: ${Colors.primaryLight};\n`;\n\nconst PageLink = styled(NavLink)`\n  padding: 10px;\n  margin-left: 70px;\n  text-decoration: none;\n  text-align: center;\n  color: ${Colors.primaryDark};\n  border-bottom: 2px solid transparent;\n  outline: none;\n  transition: border 300ms;\n\n  &.active {\n    border-bottom: 2px solid ${Colors.primaryDark};\n  }\n`;\n\nexport default NavBar;\n","import styled from \"styled-components\";\n\nimport Colors from \"../../constants/Colors\";\n\nexport default styled.div`\n  display: flex;\n  flex-direction: ${(props) => props.flexDirection || \"row\"};\n  flex: 9;\n  flex-wrap: ${(props) => props.flexWrap || \"wrap\"};\n  padding: ${(props) => props.padding || \"auto\"};\n  justify-content: ${(props) => props.justifyContent || \"center\"};\n  align-items: ${(props) => props.alignItems || \"center\"};\n  overflow: ${(props) => props.overflow || \"auto\"};\n  background-color: ${Colors.primaryLight};\n  color: ${Colors.primaryDark};\n  scrollbar-width: none;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport PageContainer from \"../components/reusable/PageContainer\";\n\nconst HomePage = (props) => {\n  return (\n    <PageContainer\n      flexDirection=\"column\"\n      alignItems=\"flexStart\"\n      justifyContent=\"flexStart\"\n    >\n      <Greeting>Hello, I am Kunal Pawar</Greeting>\n\n      <Introduction>\n        I am a software developer based in Melbourne. I love developing awesome\n        web applications. I love programming and experimenting with new things.\n        This are some of the technologies that I have mainly worked with: <br />\n        <b>Java, Javascript (ES6), React, jQuery, Node.js</b>\n      </Introduction>\n    </PageContainer>\n  );\n};\n\nconst Greeting = styled.span`\n  margin-left: 90px;\n  font-weight: 500;\n  font-size: 46px;\n  margin-bottom: 15px;\n  margin-top: 100px;\n`;\n\nconst Introduction = styled.p`\n  width: 65%;\n  margin-left: 90px;\n  margin-right: 20px;\n  font-size: 20px;\n  font-weight: 500;\n  text-align: justify;\n`;\n\nexport default HomePage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Colors from \"../constants/Colors\";\n\nconst WorkSection = ({ companyName, jobTitle, duration, jobDescription }) => (\n  <SectionContainer>\n    <CompanyName>{companyName}</CompanyName>\n    <JobDetails>\n      {jobTitle} | {duration}\n    </JobDetails>\n    <JobDescription>{jobDescription}</JobDescription>\n  </SectionContainer>\n);\n\nconst SectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  padding: 0px;\n  padding-left: 20px;\n  border-left: 3px solid ${Colors.highlight};\n  margin-bottom: 70px;\n`;\n\nconst CompanyName = styled.span`\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 0.75;\n`;\n\nconst JobDetails = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  margin-block-start: 15px;\n`;\n\nconst JobDescription = styled.p`\n    font-size 16px;\n    margin-bottom: 0px;\n    font-weight: 400;\n    text-align: justify;\n`;\n\nexport default WorkSection;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport PageContainer from \"../components/reusable/PageContainer\";\nimport Container from \"../components/reusable/Container\";\nimport WorkSection from \"../components/WorkSection\";\nimport Colors from \"../constants/Colors\";\n\nconst WorkExperience = (props) => {\n  const resorterDescription = `Started as an intern and subsequently joined the team as a part-time \n  full-stack developer.  Utilised React.Js and Node to develop a travel booking website. Implemented \n  booking flow as well as payment gateway using Stripe API`;\n\n  return (\n    <PageContainer>\n      <WorkExperienceContainer>\n        <WorkSection\n          companyName=\"Resorter\"\n          jobTitle=\"Fullstack Developer\"\n          duration=\"Aug 2019 - Feb 2020\"\n          jobDescription={resorterDescription}\n        />\n\n        <WorkSection\n          companyName=\"Nividous\"\n          jobTitle=\"Software Engineer\"\n          duration=\"Aug 2019 - Feb 2020\"\n          jobDescription={resorterDescription}\n        />\n\n        <WorkSection\n          companyName=\"Harptec\"\n          jobTitle=\"Junior Java Developer\"\n          duration=\"Aug 2019 - Feb 2020\"\n          jobDescription={resorterDescription}\n        />\n      </WorkExperienceContainer>\n    </PageContainer>\n  );\n};\n\nconst WorkExperienceContainer = styled(Container)`\n  flex-direction: column;\n  align-items: start;\n  justify-content: start;\n  padding: 50px 0px 0px 100px;\n  overflow: auto;\n`;\n\nexport default WorkExperience;\n","import React from \"react\";\nimport PageContainer from \"../components/reusable/PageContainer\";\n\nconst Portfloio = (props) => {\n  return (\n    <PageContainer>\n      <h1>Portfolio</h1>\n    </PageContainer>\n  );\n};\n\nexport default Portfloio;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Container from \"./reusable/Container\";\nimport Colors from \"../constants/Colors\";\n\nconst CustomToast = ({ appearance, children }) => {\n  return <ToastBody>{children}</ToastBody>;\n};\n\nconst ToastBody = styled(Container)`\n  background-color: ${Colors.primaryDark};\n  color: ${Colors.secondaryLight};\n  white-space: nowrap;\n  margin-left: 250px; // To get the toast in the center of the PageSection\n  padding: 15px 30px;\n  font-weight: 500;\n  font-size: 18px;\n  border-radius: 4px;\n  box-shadow: 2px 2px 5px #9b9ea3;\n`;\n\nexport default CustomToast;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport SideBar from \"./components/SideBar\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./pages/HomePage\";\nimport WorkExperience from \"./pages/WorkExperience\";\nimport Portfolio from \"./pages/Portfolio\";\nimport CustomToast from \"./components/CustomToast\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <ToastProvider\n      components={{ Toast: CustomToast }}\n      autoDismiss\n      autoDismissTimeout={3000}\n      placement=\"bottom-center\"\n    >\n      <MainContainer>\n        <SideBar />\n\n        {/* Section for NavBar and Pages */}\n        <PageSection>\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/portfolio-website\" component={HomePage} />\n            <Route path=\"/work-experience\" component={WorkExperience} />\n            <Route path=\"/portfolio\" component={Portfolio} />\n          </Switch>\n        </PageSection>\n      </MainContainer>\n    </ToastProvider>\n  );\n}\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100vh;\n  justifycontent: center;\n  alignitems: center;\n  font-family: hind-vadodara;\n`;\n\nconst PageSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 9;\n  height: 100%;\n  justifycontent: center;\n  alignitems: center;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}